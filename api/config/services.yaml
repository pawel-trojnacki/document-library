parameters:
    upload_dir: '%env(UPLOAD_DIR)%'
    elastic_host: '%env(ELASTIC_HOST)%'
    elastic_port: '%env(ELASTIC_PORT)%'
    elastic_user: '%env(ELASTIC_USER)%'
    elastic_password: '%env(ELASTIC_PASSWORD)%'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Kernel.php'
            - '../src/Document/Domain/Entity/'
            - '../src/Document/Domain/Enum/'
            - '../src/Document/Application/View/'
            - '../src/User/Domain/Entity/'
            - '../src/User/Domain/Enum/'
            - '../src/User/Application/View/'

    _instanceof:
        App\Shared\Application\Command\Sync\CommandHandler:
            tags:
                - { name: 'messenger.message_handler', bus: command.sync.bus }
        App\Shared\Application\Event\Sync\EventHandler:
            tags:
                - { name: 'messenger.message_handler', bus: event.sync.bus }
        App\Document\Application\Service\FileReader:
            tags:
                - { name: 'app.file_reader' }

    App\Document\Application\Service\FileReaderProvider:
        arguments:
            $readers: !tagged_iterator app.file_reader

    App\Document\Infrastructure\Service\FileService:
        arguments:
            $uploadDir: '%upload_dir%'

    App\Document\Infrastructure\Service\PdfReader:
        arguments:
            $parser: '@Smalot\PdfParser\Parser'

    Smalot\PdfParser\Parser: ~

    App\Shared\Infrastructure\Elasticsearch\ElasticsearchClient:
        arguments:
            $environment: '%kernel.environment%'
            $host: '%elastic_host%'
            $port: '%elastic_port%'
            $user: '%elastic_user%'
            $password: '%elastic_password%'

    App\User\Infrastructure\Service\UserPasswordHasher:
        arguments:
            $environment: '%kernel.environment%'

    App\User\Infrastructure\Security\Listener\JwtCreatedListener:
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_created' }

    App\User\Infrastructure\Security\Listener\JwtAuthenticatedListener:
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_authenticated' }

    App\Shared\Infrastructure\Listener\ExceptionListener:
        arguments:
            $environment: '%kernel.environment%'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }
