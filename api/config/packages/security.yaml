security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\User\Domain\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^
            stateless: true
            entry_point: jwt
            jwt: ~
            json_login:
                check_path: /login-check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            refresh_jwt:
                check_path: /refresh-token
#        api:
#            pattern: ^
#            stateless: true
#            jwt: ~
#        main:
#            lazy: true
#            provider: app_user_provider
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    access_control:
        - { path: ^/(login-check|refresh-token), roles: PUBLIC_ACCESS }
        - { path: ^, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
